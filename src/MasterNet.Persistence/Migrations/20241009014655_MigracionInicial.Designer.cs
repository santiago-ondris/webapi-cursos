// <auto-generated />
using System;
using MasterNet.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MasterNet.Persistence.Migrations
{
    [DbContext(typeof(MasterNetDbContext))]
    [Migration("20241009014655_MigracionInicial")]
    partial class MigracionInicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0-preview.2.24128.4");

            modelBuilder.Entity("MasterNet.Domain.Calificacion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Alumno")
                        .HasColumnType("TEXT");

                    b.Property<string>("Comentario")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Puntaje")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("calificaciones", (string)null);
                });

            modelBuilder.Entity("MasterNet.Domain.Curso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Descripcion")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("FechaPublicacion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Titulo")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("cursos", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("5a98f06c-ae8d-4833-9e42-b87d602c10cc"),
                            Descripcion = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            FechaPublicacion = new DateTime(2024, 10, 9, 1, 46, 54, 753, DateTimeKind.Utc).AddTicks(4717),
                            Titulo = "Small Soft Tuna"
                        },
                        new
                        {
                            Id = new Guid("863a47c6-cd03-4354-a942-95e790e829f3"),
                            Descripcion = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            FechaPublicacion = new DateTime(2024, 10, 9, 1, 46, 54, 753, DateTimeKind.Utc).AddTicks(4759),
                            Titulo = "Tasty Concrete Gloves"
                        },
                        new
                        {
                            Id = new Guid("741967eb-a8d7-4b47-b6e0-a0d45faa41c6"),
                            Descripcion = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            FechaPublicacion = new DateTime(2024, 10, 9, 1, 46, 54, 753, DateTimeKind.Utc).AddTicks(4797),
                            Titulo = "Refined Steel Pizza"
                        },
                        new
                        {
                            Id = new Guid("b9a5d754-6e81-4d07-ad67-07375c42144f"),
                            Descripcion = "The Football Is Good For Training And Recreational Purposes",
                            FechaPublicacion = new DateTime(2024, 10, 9, 1, 46, 54, 753, DateTimeKind.Utc).AddTicks(4829),
                            Titulo = "Licensed Wooden Keyboard"
                        },
                        new
                        {
                            Id = new Guid("48921a25-3f1d-481f-8a1f-273b8daab147"),
                            Descripcion = "New ABC 13 9370, 13.3, 5th Gen CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A & J 2016",
                            FechaPublicacion = new DateTime(2024, 10, 9, 1, 46, 54, 753, DateTimeKind.Utc).AddTicks(4859),
                            Titulo = "Incredible Wooden Car"
                        },
                        new
                        {
                            Id = new Guid("a2f76e43-94ff-4312-9b93-7b6a51c36fe2"),
                            Descripcion = "The Football Is Good For Training And Recreational Purposes",
                            FechaPublicacion = new DateTime(2024, 10, 9, 1, 46, 54, 753, DateTimeKind.Utc).AddTicks(4893),
                            Titulo = "Handmade Rubber Shoes"
                        },
                        new
                        {
                            Id = new Guid("8212bf7c-b780-402a-b83a-aa0681167850"),
                            Descripcion = "New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart",
                            FechaPublicacion = new DateTime(2024, 10, 9, 1, 46, 54, 753, DateTimeKind.Utc).AddTicks(4921),
                            Titulo = "Licensed Granite Towels"
                        },
                        new
                        {
                            Id = new Guid("b71b87df-3818-48f0-a9ce-0d76b2ffb00e"),
                            Descripcion = "The automobile layout consists of a front-engine design, with transaxle-type transmissions mounted at the rear of the engine and four wheel drive",
                            FechaPublicacion = new DateTime(2024, 10, 9, 1, 46, 54, 753, DateTimeKind.Utc).AddTicks(4951),
                            Titulo = "Handmade Wooden Computer"
                        },
                        new
                        {
                            Id = new Guid("3f155481-b306-43b4-b736-895f7ee6c9a5"),
                            Descripcion = "New ABC 13 9370, 13.3, 5th Gen CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A & J 2016",
                            FechaPublicacion = new DateTime(2024, 10, 9, 1, 46, 54, 753, DateTimeKind.Utc).AddTicks(4998),
                            Titulo = "Licensed Wooden Tuna"
                        });
                });

            modelBuilder.Entity("MasterNet.Domain.CursoInstructor", b =>
                {
                    b.Property<Guid>("InstructorId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("TEXT");

                    b.HasKey("InstructorId", "CursoId");

                    b.HasIndex("CursoId");

                    b.ToTable("cursos_instructores", (string)null);
                });

            modelBuilder.Entity("MasterNet.Domain.CursoPrecio", b =>
                {
                    b.Property<Guid>("PrecioId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("TEXT");

                    b.HasKey("PrecioId", "CursoId");

                    b.HasIndex("CursoId");

                    b.ToTable("cursos_precios", (string)null);
                });

            modelBuilder.Entity("MasterNet.Domain.Instructor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Apellidos")
                        .HasColumnType("TEXT");

                    b.Property<string>("Grado")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("instructores", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("d99be180-cdd9-481e-a2d0-5adcbc0886fc"),
                            Apellidos = "Schaefer",
                            Grado = "National Marketing Orchestrator",
                            Nombre = "Elisha"
                        },
                        new
                        {
                            Id = new Guid("4fab5457-f6cd-42cb-a8e6-78eaa0e405d3"),
                            Apellidos = "Bechtelar",
                            Grado = "Future Data Manager",
                            Nombre = "Arielle"
                        },
                        new
                        {
                            Id = new Guid("ae2d20c9-a615-4757-87c7-f30e62935d0b"),
                            Apellidos = "Bailey",
                            Grado = "Direct Applications Director",
                            Nombre = "Winona"
                        },
                        new
                        {
                            Id = new Guid("f3f3451b-8194-40f7-929a-45517bd987f9"),
                            Apellidos = "Gislason",
                            Grado = "Legacy Applications Coordinator",
                            Nombre = "Lonie"
                        },
                        new
                        {
                            Id = new Guid("8ef350e1-ba53-4bea-9b90-6996fef49c88"),
                            Apellidos = "Muller",
                            Grado = "Regional Web Developer",
                            Nombre = "Kaelyn"
                        },
                        new
                        {
                            Id = new Guid("e2c875f7-ff66-4850-a5b9-e4338636f53e"),
                            Apellidos = "Wunsch",
                            Grado = "Lead Response Liaison",
                            Nombre = "Rahsaan"
                        },
                        new
                        {
                            Id = new Guid("23316153-9319-46fc-9c3d-0c5b7478499e"),
                            Apellidos = "Considine",
                            Grado = "Dynamic Factors Administrator",
                            Nombre = "Jaydon"
                        },
                        new
                        {
                            Id = new Guid("7fea54f2-f928-4440-b5ad-6983b5d59a11"),
                            Apellidos = "Lowe",
                            Grado = "Corporate Accounts Strategist",
                            Nombre = "Stephen"
                        },
                        new
                        {
                            Id = new Guid("6fe87960-a4d1-44ef-8fdb-d2efb955dcfd"),
                            Apellidos = "Adams",
                            Grado = "Direct Configuration Manager",
                            Nombre = "Braulio"
                        },
                        new
                        {
                            Id = new Guid("8eb560d4-f6be-44af-825a-448acdd5d1ae"),
                            Apellidos = "Gottlieb",
                            Grado = "Forward Communications Liaison",
                            Nombre = "Levi"
                        });
                });

            modelBuilder.Entity("MasterNet.Domain.Photo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("imagenes", (string)null);
                });

            modelBuilder.Entity("MasterNet.Domain.Precio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .HasMaxLength(250)
                        .HasColumnType("VARCHAR");

                    b.Property<decimal>("PrecioActual")
                        .HasPrecision(10, 2)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PrecioPromocion")
                        .HasPrecision(10, 2)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("precios", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("abd57bfc-e93f-4e3c-9d62-8a34eca3c193"),
                            Nombre = "Precio Regular",
                            PrecioActual = 10.0m,
                            PrecioPromocion = 8.0m
                        });
                });

            modelBuilder.Entity("MasterNet.Domain.Calificacion", b =>
                {
                    b.HasOne("MasterNet.Domain.Curso", "Curso")
                        .WithMany("Calificaciones")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("MasterNet.Domain.CursoInstructor", b =>
                {
                    b.HasOne("MasterNet.Domain.Curso", "Curso")
                        .WithMany("CursoInstructores")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MasterNet.Domain.Instructor", "Instructor")
                        .WithMany("CursoInstructores")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("MasterNet.Domain.CursoPrecio", b =>
                {
                    b.HasOne("MasterNet.Domain.Curso", "Curso")
                        .WithMany("CursoPrecios")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MasterNet.Domain.Precio", "Precio")
                        .WithMany("CursoPrecios")
                        .HasForeignKey("PrecioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Precio");
                });

            modelBuilder.Entity("MasterNet.Domain.Photo", b =>
                {
                    b.HasOne("MasterNet.Domain.Curso", "Curso")
                        .WithMany("Photos")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("MasterNet.Domain.Curso", b =>
                {
                    b.Navigation("Calificaciones");

                    b.Navigation("CursoInstructores");

                    b.Navigation("CursoPrecios");

                    b.Navigation("Photos");
                });

            modelBuilder.Entity("MasterNet.Domain.Instructor", b =>
                {
                    b.Navigation("CursoInstructores");
                });

            modelBuilder.Entity("MasterNet.Domain.Precio", b =>
                {
                    b.Navigation("CursoPrecios");
                });
#pragma warning restore 612, 618
        }
    }
}
